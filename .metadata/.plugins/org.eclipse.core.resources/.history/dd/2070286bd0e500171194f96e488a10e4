package data;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import Entities.Story;

@Transactional
@Repository
public class StoryDAOImpl implements StoryDAO{
	
	@PersistenceContext
	private EntityManager em;

	@Override
	public List<Story> index() {
		String query = "Select s FROM Story s";
		List<Story> stories = em.createQuery(query, Story.class).getResultList();
		return stories;
	}

	@Override
	public Story show(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Story create(String json) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Story update(int id, String json) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean destroy(int id) {
		// TODO Auto-generated method stub
		return false;
	}

}

/*
 * 


	@Override
	public Quiz show(int id) {
		return em.find(Quiz.class, id);
	}

	@Override
	public Quiz create(String json) {
		ObjectMapper mapper = new ObjectMapper();
		try {
			Quiz newQuiz = mapper.readValue(json, Quiz.class);
			em.persist(newQuiz);
			em.flush();
			return newQuiz;
		}
		catch (Exception e){
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public Quiz update(int id, String quizJson) {
		try {
			ObjectMapper mapper = new ObjectMapper();
			Quiz quizManaged = em.find(Quiz.class, id);
			Quiz changed = mapper.readValue(quizJson, Quiz.class);
			quizManaged.setName(changed.getName());
			return quizManaged;
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public boolean destroy(int id) {
		Quiz q = em.find(Quiz.class, id);
		em.remove(q);
		if (em.find(Quiz.class, id) != null) {
			return false;
		}
		else {
			return true;
		}
	}

 * 
 * 
 */
